{"version":3,"sources":["components/search.js","components/api-service.js","components/video-item.js","components/video-list.js","components/video-detail.js","components/app.js","components/store.js","index.js"],"names":["apiService","getData","data","a","resp","axios","get","params","q","part","maxResults","key","type","Search","inject","observer","handleFormSubmit","e","store","props","preventDefault","getInputValue","items","videoList","map","item","id","videoId","title","snippet","img","thumbnails","default","url","saveVideoList","setCurrentVideo","this","onSubmit","TextField","fullWidth","value","label","onChange","handleInputChange","InputProps","endAdornment","InputAdornment","Component","VideoItem","Grid","container","xs","src","alt","onClick","className","VideoList","spacing","getVideoList","VideoDetail","currentVideo","frameBorder","allow","allowFullScreen","width","height","App","getCurrentVideo","Container","maxWidth","style","marginTop","inputValue","target","observable","computed","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62664dc5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport ApiService from \"./api-service\";\r\n\r\nconst apiService = new ApiService();\r\n\r\n@inject('store')\r\n@observer\r\nclass Search extends Component {\r\n    handleFormSubmit = async (e) => {\r\n        const { store } = this.props;\r\n        e.preventDefault();\r\n        const resp = await apiService.getData(store.getInputValue);\r\n        const { items } = resp.data;\r\n        const videoList = items.map( item => {\r\n            return {\r\n                id: item.id.videoId,\r\n                title: item.snippet.title,\r\n                img: item.snippet.thumbnails.default.url\r\n            }\r\n        });\r\n        store.saveVideoList(videoList);\r\n        store.setCurrentVideo(videoList[0].id, videoList[0].title)\r\n    };\r\n    render() {\r\n        const { store } = this.props;\r\n        return (\r\n            <form onSubmit={(e) => this.handleFormSubmit(e)}>\r\n                <TextField\r\n                    fullWidth\r\n                    value={ store.getInputValue }\r\n                    label=\"Video search\"\r\n                    onChange={(e) => store.handleInputChange(e)}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment>\r\n                                <SearchIcon/>\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import axios from 'axios';\r\n\r\nclass ApiService {\r\n    getData = async (data) => {\r\n        const KEY = 'AIzaSyBM0WBlPOwd-cCdsDXMINf150sxqSpOQmM';\r\n        const resp = axios.get(`https://www.googleapis.com/youtube/v3/search`, {\r\n            params: {\r\n                q: data,\r\n                part: \"snippet\",\r\n                maxResults: 5,\r\n                key: KEY,\r\n                type: 'video',\r\n            }\r\n        });\r\n        return resp;\r\n    }\r\n}\r\n\r\nexport default ApiService;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {inject, observer} from \"mobx-react\";\r\n\r\n@inject('store')\r\n\r\n@observer\r\nclass VideoItem extends Component  {\r\n    render(){\r\n        const {img, title, store, videoId} = this.props;\r\n        return (\r\n            <>\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                        <img src={img}\r\n                             alt={title}\r\n                             onClick={() => store.setCurrentVideo(videoId, title)}\r\n                             className=\"pointer\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <p>{title}</p>\r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nexport default VideoItem;","import React, {Component} from 'react';\r\nimport VideoItem from './video-item';\r\nimport {inject,  observer} from 'mobx-react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n@inject('store')\r\n\r\n@observer\r\nclass VideoList extends Component{\r\n    render(){\r\n        const { store } = this.props;\r\n        return (\r\n            <>\r\n                <Grid container spacing={2}>\r\n                {\r\n                    store.getVideoList.map(({id, img, title}) => {\r\n                        return (\r\n                            <Grid item xs={12} key={id}>\r\n                                <VideoItem\r\n                                    videoId={id}\r\n                                    img={img}\r\n                                    title={title}\r\n                                />\r\n                            </Grid>\r\n\r\n                        )\r\n                    })\r\n                }\r\n                </Grid>\r\n\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nexport default VideoList","import React from 'react';\r\n\r\nconst VideoDetail = ({currentVideo}) => {\r\n    return (\r\n        <>\r\n            <p>The title is: {currentVideo.title}</p>\r\n            <iframe src={`https://www.youtube.com/embed/${currentVideo.id}`} frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                    allowFullScreen\r\n                    title={currentVideo.title}\r\n                    width=\"90%\"\r\n                    height=\"230px\"\r\n            ></iframe>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VideoDetail;","import React, {Component} from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport Search from './search';\r\nimport VideoList from './video-list';\r\nimport VideoDetail from './video-detail';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n@inject('store')\r\n\r\n@observer\r\nclass App extends Component {\r\n    render(){\r\n        const { store } = this.props;\r\n        const currentVideo = store.getCurrentVideo;\r\n        return(\r\n            <Container maxWidth=\"md\">\r\n                <Search />\r\n                <Grid container style={{marginTop: '30px'}}>\r\n                    <Grid item xs={6}>\r\n                        { currentVideo &&\r\n                        <VideoDetail\r\n                            currentVideo = { currentVideo }\r\n                        />\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <VideoList />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import {observable, computed, action} from \"mobx\";\r\n\r\nclass Store {\r\n    @observable inputValue = '';\r\n    @observable videoList = [];\r\n    @observable currentVideo = '';\r\n\r\n    @computed get getInputValue(){\r\n        return this.inputValue\r\n    }\r\n\r\n    @computed get getCurrentVideo(){\r\n        return this.currentVideo\r\n    }\r\n\r\n    @computed get getVideoList(){\r\n        return this.videoList\r\n    }\r\n\r\n    @action handleInputChange(e){\r\n        this.inputValue = e.target.value\r\n    }\r\n\r\n    @action saveVideoList(data){\r\n        this.videoList = data;\r\n    }\r\n\r\n    @action setCurrentVideo(id, title){\r\n        this.currentVideo = {\r\n            id,\r\n            title\r\n        }\r\n    }\r\n}\r\n\r\nconst store = new Store();\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport { Provider } from 'mobx-react';\nimport store from './components/store';\nimport './components/styles.css';\n\n\nReactDOM.render(\n    <Provider\n        store={store}\n    >\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n"],"sourceRoot":""}